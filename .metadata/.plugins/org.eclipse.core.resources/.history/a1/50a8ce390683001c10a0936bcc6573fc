package infra;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.TypedQuery;

import modelo.basico.Produto;

public class DAO<E>{

	private static EntityManagerFactory emf;
	private EntityManagerFactory em; 
	private Class<E> classe;
	
	static {
		try {
			emf = Persistence.createEntityManagerFactory("exercicios-jpa");
			
		} catch (Exception e) {
			// logar -> log4j
		}
	}
	
	public DAO() {	
		this(null); // Construtur this passando a classe nulo
	}
	
	public DAO(Class<E> classe) {
		this.classe = classe;
		em = (EntityManagerFactory) emf.createEntityManager();
	}
	
	public DAO<E> abrirT() {
		((EntityManager) em).getTransaction().begin();
		return this;
	}
	
	public DAO<E> fecharT() {
		((EntityManager) em).getTransaction().commit();
		return this;
	}
	
	public DAO<E> incluir(E entidade) {
		((EntityManager) em).persist(entidade);
		return this;
	}
	
	/* Vai fazer abertura e fechamento da transação */
	public DAO<E> incluirAtomico(E entidade) {
		return this.abrirT().incluir(entidade).fecharT();
	}
	
	public List<E> obterTodos(int qtde, int deslocamento) {
		if(classe == null) {
			throw new UnsupportedOperationException("Classe nula");
		}
		
		/* TODA CONSULTA EM JPQL PRECISA DE TER UM ALIAS*/
		String jpql = "select e from" + classe.getName() + " e";  /* consulta*/ 
		TypedQuery<E> query = ((EntityManager) em).createQuery(jpql, classe);
		query.setMaxResults(qtde);
		query.setFirstResult(deslocamento);
		return query.getResultList();
	}
	
	
	
	/*
	public DAO<E> teste(){
		return this;
	}
	
	public static void main(String[] args) {
		new DAO<Produto>().teste().teste().teste();
	}
	*/
	
	
}
